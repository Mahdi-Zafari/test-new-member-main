# Stage 1: Build React App
FROM node:latest as react-build
WORKDIR /app
COPY . .
RUN npm install
RUN npm run build

# Stage 2: Setup Laravel with PHP-FPM
FROM php:8.3-fpm-alpine

# Install dependencies
RUN apk add --no-cache \
    openssl \
    bash \
    unzip \
    nano \
    icu-dev \
    libzip-dev \
    zip \
    oniguruma-dev \
    curl

# Install extensions
RUN docker-php-ext-install pdo_mysql mbstring zip

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Set working directory
WORKDIR /var/www

# Copy existing application directory permissions
COPY --chown=www-data:www-data . /var/www

# Install deps
RUN composer install --no-interaction --optimize-autoloader

# Remove js-dev files
RUN rm -rf /var/www/resources/js

# Environment variables
ENV APP_ENV=local
ENV APP_KEY=base64:pOiZjlJphbcwB/75HpD3+qQwpdbCfulwHsNbIw0Im0c=
ENV APP_DEBUG=true
ENV APP_URL=https://5.projects.diseec.com
ENV APP_LOCALE=tr
ENV APP_FALLBACK_LOCALE=tr
ENV APP_FAKER_LOCALE=tr_TR
ENV ASSET_URL=https://5.projects.diseec.com
ENV DB_CONNECTION=sqlite
ENV DB_DATABASE=/var/www/database/database.sqlite
ENV VITE_HOST_URL=https://5.projects.diseec.com

# Setup database
RUN touch database/database.sqlite
RUN php artisan migrate:fresh --seed --force

RUN php artisan optimize:clear

# Copy React build from Stage 1
COPY --from=react-build /app/public/build /var/www/public/build

# # Change PHP-FPM port to 80
# RUN sed -i 's/9000/80/g' /usr/local/etc/php-fpm.d/www.conf

# Expose port 80
EXPOSE 80

# Start server
CMD ["php" , "artisan", "serve", "--host=0.0.0.0", "--port=80"]